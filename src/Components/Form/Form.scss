@use 'src/styles/_variables.scss' as *;

.form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    width: 328px;

    @media screen and (min-width: 768px) {
        width: 380px;
    }
}

// inputs

.conteiner_input {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    width: 100%;
    grid-gap: 50px;
}

.wrapper_input {
    position: relative;

    span {
        position: absolute;
        top: 18px;
        left: 16px;

        font-size: $paragraph-size-m;
        line-height: $paragraph-size-m;

        color: $gray-text-color;
        background-color: transparent;
    }

}

.lable_text {
    position: absolute;
    top: 18px;
    left: 16px;

    font-size: $paragraph-size-m;
    line-height: $paragraph-size-m;

    color: $gray-text-color;
    background-color: transparent;

}

.input {
    display: inline-flex;

    width: (328px - 16px);
    padding: 13px 0px 13px 15px;

    border: 1px solid $border-color;
    border-radius: 4px;
    outline: none;

    font-size: $paragraph-size-m;
    line-height: $paragraph-LineHeight-m;

    background-color: transparent;
    color: $black87;

    transition: 400ms;

    &:invalid {
        border: 1px solid $error-color;
    }

    &:placeholder-shown {
        color: $gray-text-color;
    }


    @media screen and (min-width: 768px) {
        width: (380px - 17px);
    }
}



.input:focus~span,
.input:valid~span {
    transform: translate(6px, -24px);
    width: 40px;

    text-align: center;

    font-size: $paragraph-size-sm;
    line-height: $paragraph-LineHeight-sm;

    background-color: $background-color;
}

.input:focus:invalid~span {
    color: $error-color ;
}


// button submit

.button_submit {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    padding: 4px 22px;
    min-width: 100px;

    border: none;
    outline: none;
    border-radius: 80px;

    font-size: $paragraph-size-m;
    line-height: $paragraph-LineHeight-m;



    cursor: pointer;

    &:disabled {
        background-color: $disabled-color;
        color: $white87;

        &:hover {
            background-color: $disabled-color;
        }
    }



    &:enabled {
        background-color: $primary-color;
        color: $black87;

        &:hover {
            background-color: $hover-color;
        }
    }
}